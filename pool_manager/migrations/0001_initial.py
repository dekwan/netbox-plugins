# Generated by Django 5.0.9 on 2024-09-05 04:26

import django.core.validators
import django.db.models.deletion
import taggit.managers
import utilities.json
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('extras', '0116_custom_link_button_color'),
    ]

    operations = [
        migrations.CreateModel(
            name='Pool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=200)),
                ('range', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator(code='invalid_range', message='Enter a valid range.', regex='^((\\s*\\d+\\s*)+(-\\s*\\d+\\s*)?)(,((\\s*\\d+\\s*)+(-\\s*\\d+\\s*)?))*$')]
)),
                ('algorithm', models.CharField(default='first_available', max_length=50)),
                ('index', models.PositiveIntegerField(blank=True, default=0)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='PoolLease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('requester_id', models.CharField(max_length=200)),
                ('requester_details', models.CharField(blank=True, max_length=200)),
                ('range_number', models.PositiveIntegerField()),
                ('tag', models.CharField(blank=True, max_length=200)),
                ('pool', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lease_to_pool', to='pool_manager.pool')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'ordering': ('pool', 'range_number'),
                'unique_together': {('pool', 'range_number')},
            },
        ),
    ]
